image: docker:latest

variables:
  REGION: ap-southeast-1
  STAGING_REPOSITORY_NAME:
  STAGING_REPOSITORY_URL:
  STAGING_TASK_DEFINTION_NAME:
  STAGING_CLUSTER_NAME:
  STAGING_SERVICE_NAME:

services:
  - docker:dind

stages:
  - test
  - build
  - docker-build
  - docker-deploy

testing:
  except:
    - staging
    - master
  stage: test
  image: openjdk:12
  before_script:
    - chmod +x ./gradlew
  script:
    - ./gradlew clean
    - ./gradlew test

build-artifact:staging:
  only:
    - staging
  stage: build
  image: openjdk:12
  before_script:
    - chmod +x ./gradlew
  script:
    - ./gradlew clean
    - ./gradlew buildApp -PmainClass=staging
  artifacts:
    paths:
      - entrypoint/build/libs

build-image:staging:
  only:
    - staging
  stage: docker-build
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region "${REGION}")
  script:
    - echo "Building image..."
    - docker build -t $STAGING_REPOSITORY_NAME:latest .
    - echo "Tagging image..."
    - docker tag $STAGING_REPOSITORY_NAME:latest $STAGING_REPOSITORY_URL:latest
    - echo "Pushing image..."
    - docker push $STAGING_REPOSITORY_URL:latest
  dependencies:
    - build-artifact:staging

deploy:staging:
  only:
    - staging
  stage: docker-deploy
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region "${REGION}")
    - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
  script:
    - echo $STAGING_REPOSITORY_URL:latest
    - echo "Updating the service..."
    - aws ecs update-service --region "${REGION}" --cluster "${STAGING_CLUSTER_NAME}" --service "${STAGING_SERVICE_NAME}"  --task-definition "${STAGING_TASK_DEFINTION_NAME}" --force-new-deployment




